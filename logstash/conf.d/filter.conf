filter {
#    if "squid" in [tags] {
#  grok {
#    match => {
#        "message" => "%{NUMBER:timestamp}\s+%{NUMBER:response_time} %{IPORHOST:src_ip} %{NOTSPACE:squid_request_status}/%{NUMBER:http_status_code} %{NUMBER:transfer_size} %{NOTSPACE:http_method} (%{URIPROTO:url_scheme}://)?(?<url_host>\S+?)(:%{INT:url_port})?(/%{NOTSPACE:url_path})?\s+%{NOTSPACE:client_identity}\s+%{NOTSPACE:peer_code}/%{NOTSPACE:peerhost}\s+%{NOTSPACE:content_type}"
#     }
#   }
# }

#For Exchange Message Tracking
    if "exchange" in [tags] {  
  	csv {
            columns => [ 'date-time', 'client-ip', 'client-hostname', 'server-ip', 'server-hostname', 'source-context', 'connector-id', 'source', 'event-id', 'internal-message-id', 'message-id', 'network-message-id', 'recipient-address', 'recipient-status', 'total-bytes', 'recipient-count', 'related-recipient-address', 'reference', 'message-subject', 'sender-address', 'return-path', 'message-info', 'directionality', 'tenant-id', 'original-client-ip', 'original-server-ip', 'custom-data' ]
	    separator => ","
	}	
	
	mutate { 
	split => { "custom-data" => "AccountForest=" }
	add_field => ["AccountForest", "%{[custom-data][1]}"]
	}

 	prune {
        remove_field => ["message","date-time","directionality","input.type","message-info","source","type","custom-data","connector-id","[agent][id]","[agent][ephemeral_id]","[agent][hostname]","[agent][type]","[agent][version]","[ecs][version]","[input][type]","[log][offset]","[log][file][path]","[version]" ]
        }

  }
}
